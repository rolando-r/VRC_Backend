// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistencia;

#nullable disable

namespace Persistencia.Data.Migrations
{
    [DbContext(typeof(VRC_BackendContext))]
    [Migration("20230806205530_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Dominio.Afiliacion", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPrestadorServicio")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreAfiliacion")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("IdCod");

                    b.HasIndex("IdPrestadorServicio");

                    b.ToTable("Afiliaciones", (string)null);
                });

            modelBuilder.Entity("Dominio.Ciudad", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DepartamentoIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdDepartamento")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreCiudad")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.HasIndex("DepartamentoIdCod");

                    b.ToTable("Ciudades", (string)null);
                });

            modelBuilder.Entity("Dominio.ContactoPersona", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("IdTipoContacto")
                        .HasColumnType("longtext");

                    b.Property<int>("NroFijo")
                        .HasColumnType("int");

                    b.Property<int>("NroMovil")
                        .HasColumnType("int");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoContactoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("PersonaIdCod");

                    b.HasIndex("TipoContactoIdCod");

                    b.ToTable("ContactoPersonas", (string)null);
                });

            modelBuilder.Entity("Dominio.Departamento", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPais")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreDepartamento")
                        .HasColumnType("longtext");

                    b.Property<string>("PaisIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("PaisIdCod");

                    b.ToTable("Departamentos", (string)null);
                });

            modelBuilder.Entity("Dominio.DetalleFactura", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FacturaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdFactura")
                        .HasColumnType("longtext");

                    b.Property<string>("IdRecomendacion")
                        .HasColumnType("longtext");

                    b.Property<string>("RecomendacionIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("FacturaIdCod");

                    b.HasIndex("RecomendacionIdCod");

                    b.ToTable("DetalleFacturas", (string)null);
                });

            modelBuilder.Entity("Dominio.Empresa", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEmpresa")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("Empresas", (string)null);
                });

            modelBuilder.Entity("Dominio.Especialidad", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEspecialidad")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("Especialidades", (string)null);
                });

            modelBuilder.Entity("Dominio.EstadoOrden", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEstadoOrden")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("EstadoOrdenes", (string)null);
                });

            modelBuilder.Entity("Dominio.EstadoParte", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreEstadoParte")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("EstadoPartes", (string)null);
                });

            modelBuilder.Entity("Dominio.Factura", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoFactura")
                        .HasColumnType("longtext");

                    b.Property<int>("NumeroFactura")
                        .HasColumnType("int");

                    b.Property<int>("Total")
                        .HasColumnType("int");

                    b.HasKey("IdCod");

                    b.ToTable("Facturas", (string)null);
                });

            modelBuilder.Entity("Dominio.InspeccionParte", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdParteVehiculo")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreInspeccionParte")
                        .HasColumnType("longtext");

                    b.Property<string>("ParteVehiculoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("ParteVehiculoIdCod");

                    b.ToTable("InspeccionPartes", (string)null);
                });

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreMarca")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("Marcas", (string)null);
                });

            modelBuilder.Entity("Dominio.Modelo", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdMarca")
                        .HasColumnType("longtext");

                    b.Property<string>("MarcaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreModelo")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.HasIndex("MarcaIdCod");

                    b.ToTable("Modelos", (string)null);
                });

            modelBuilder.Entity("Dominio.Movimiento", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaMovimiento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdTipoMovimiento")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoMovimientoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("TipoMovimientoIdCod");

                    b.ToTable("Movimientos", (string)null);
                });

            modelBuilder.Entity("Dominio.Orden", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoOrdenIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FacturaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime>("FechaCierre")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("FechaOrden")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("IdEstadoOrden")
                        .HasColumnType("longtext");

                    b.Property<string>("IdFactura")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("EstadoOrdenIdCod");

                    b.HasIndex("FacturaIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.ToTable("Ordenes", (string)null);
                });

            modelBuilder.Entity("Dominio.OrdenDiagnostico", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescripcionDiagnostico")
                        .HasColumnType("longtext");

                    b.Property<string>("IdOrden")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("OrdenIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("OrdenIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.ToTable("OrdenDiagnosticos", (string)null);
                });

            modelBuilder.Entity("Dominio.OrdenServicio", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DetalleFacturaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdDetalleFact")
                        .HasColumnType("longtext");

                    b.Property<string>("IdOrden")
                        .HasColumnType("longtext");

                    b.Property<string>("IdServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("OrdenIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ServicioIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("DetalleFacturaIdCod");

                    b.HasIndex("OrdenIdCod");

                    b.HasIndex("ServicioIdCod");

                    b.ToTable("OrdenServicios", (string)null);
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombrePais")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("Paises", (string)null);
                });

            modelBuilder.Entity("Dominio.ParteVehiculo", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EstadoParteIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdEstadoParte")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreParteVehiculo")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.HasIndex("EstadoParteIdCod");

                    b.ToTable("ParteVehiculos", (string)null);
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Contraseña")
                        .HasColumnType("longtext");

                    b.Property<string>("IdSucursal")
                        .HasColumnType("longtext");

                    b.Property<string>("IdTipoPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("NombrePersona")
                        .HasColumnType("longtext");

                    b.Property<string>("SucursalIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("TipoPersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("SucursalIdCod");

                    b.HasIndex("TipoPersonaIdCod");

                    b.ToTable("Personas", (string)null);
                });

            modelBuilder.Entity("Dominio.PersonaAfiliacion", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("AfiliacionIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdAfiliacion")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("AfiliacionIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.ToTable("PersonaAfiliaciones", (string)null);
                });

            modelBuilder.Entity("Dominio.PersonaEspecialidad", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("EspecialidadIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdEspecialidad")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("EspecialidadIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.ToTable("PersonaEspecialidades", (string)null);
                });

            modelBuilder.Entity("Dominio.PersonaServicio", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("IdServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ServicioIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("PersonaIdCod");

                    b.HasIndex("ServicioIdCod");

                    b.ToTable("PersonaServicios", (string)null);
                });

            modelBuilder.Entity("Dominio.PrestadorServicio", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdTipoPrestadorSer")
                        .HasColumnType("longtext");

                    b.Property<string>("NombrePrestadorServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoPrestadorSerIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("TipoPrestadorSerIdCod");

                    b.ToTable("PrestadorServicios", (string)null);
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Descripcion")
                        .HasColumnType("longtext");

                    b.Property<string>("IdMovimiento")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("IdTipoProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("MovimientoIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PrecioProducto")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("TipoProductoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("MovimientoIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.HasIndex("TipoProductoIdCod");

                    b.ToTable("Productos", (string)null);
                });

            modelBuilder.Entity("Dominio.ProductoOrdenSer", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<string>("EstadoProdOrdenSer")
                        .HasColumnType("longtext");

                    b.Property<string>("IdOrdenServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("IdProducto")
                        .HasColumnType("longtext");

                    b.Property<string>("OrdenServicioIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<int>("PrecioTotalProducto")
                        .HasColumnType("int");

                    b.Property<string>("ProductoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("OrdenServicioIdCod");

                    b.HasIndex("ProductoIdCod");

                    b.ToTable("ProductoOrdenSers", (string)null);
                });

            modelBuilder.Entity("Dominio.Recomendacion", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("DescripcionRec")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("Recomendaciones", (string)null);
                });

            modelBuilder.Entity("Dominio.Servicio", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdTipoServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreServicio")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoServicioIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("TipoServicioIdCod");

                    b.ToTable("Servicios", (string)null);
                });

            modelBuilder.Entity("Dominio.Sucursal", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("CiudadIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ContactoPersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Direccion")
                        .HasColumnType("longtext");

                    b.Property<string>("EmpresaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdCiudad")
                        .HasColumnType("longtext");

                    b.Property<string>("IdContactoPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("IdEmpresa")
                        .HasColumnType("longtext");

                    b.Property<string>("NombreSucursal")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.HasIndex("CiudadIdCod");

                    b.HasIndex("ContactoPersonaIdCod");

                    b.HasIndex("EmpresaIdCod");

                    b.ToTable("Sucursales", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoContacto", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoContacto")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoContactos", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoMovimiento", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoMovimiento")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoMovimientos", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoPersona", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoPersona")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoPersonas", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoPrestadorSer", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoPrestadorSer")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoPrestadorSers", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoProducto", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoProducto")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoProductos", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoServicio", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoServicio")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoServicios", (string)null);
                });

            modelBuilder.Entity("Dominio.TipoVehiculo", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("NombreTipoVehiculo")
                        .HasColumnType("longtext");

                    b.HasKey("IdCod");

                    b.ToTable("TipoVehiculos", (string)null);
                });

            modelBuilder.Entity("Dominio.Vehiculo", b =>
                {
                    b.Property<string>("IdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("IdInspeccionParte")
                        .HasColumnType("longtext");

                    b.Property<string>("IdModelo")
                        .HasColumnType("longtext");

                    b.Property<string>("IdOrden")
                        .HasColumnType("longtext");

                    b.Property<string>("IdPersona")
                        .HasColumnType("longtext");

                    b.Property<string>("IdTipoVehiculo")
                        .HasColumnType("longtext");

                    b.Property<string>("InspeccionParteIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("ModeloIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("OrdenIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("PersonaIdCod")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Placa")
                        .HasColumnType("longtext");

                    b.Property<string>("TipoVehiculoIdCod")
                        .HasColumnType("varchar(255)");

                    b.HasKey("IdCod");

                    b.HasIndex("InspeccionParteIdCod");

                    b.HasIndex("ModeloIdCod");

                    b.HasIndex("OrdenIdCod");

                    b.HasIndex("PersonaIdCod");

                    b.HasIndex("TipoVehiculoIdCod");

                    b.ToTable("Vehiculos", (string)null);
                });

            modelBuilder.Entity("Dominio.Afiliacion", b =>
                {
                    b.HasOne("Dominio.PrestadorServicio", "PrestadorServicio")
                        .WithMany("Afiliaciones")
                        .HasForeignKey("IdPrestadorServicio");

                    b.Navigation("PrestadorServicio");
                });

            modelBuilder.Entity("Dominio.Ciudad", b =>
                {
                    b.HasOne("Dominio.Departamento", "Departamento")
                        .WithMany("Ciudades")
                        .HasForeignKey("DepartamentoIdCod");

                    b.Navigation("Departamento");
                });

            modelBuilder.Entity("Dominio.ContactoPersona", b =>
                {
                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("ContactoPersonas")
                        .HasForeignKey("PersonaIdCod");

                    b.HasOne("Dominio.TipoContacto", "TipoContacto")
                        .WithMany("ContactoPersonas")
                        .HasForeignKey("TipoContactoIdCod");

                    b.Navigation("Persona");

                    b.Navigation("TipoContacto");
                });

            modelBuilder.Entity("Dominio.Departamento", b =>
                {
                    b.HasOne("Dominio.Pais", "Pais")
                        .WithMany("Departamentos")
                        .HasForeignKey("PaisIdCod");

                    b.Navigation("Pais");
                });

            modelBuilder.Entity("Dominio.DetalleFactura", b =>
                {
                    b.HasOne("Dominio.Factura", "Factura")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("FacturaIdCod");

                    b.HasOne("Dominio.Recomendacion", "Recomendacion")
                        .WithMany("DetalleFacturas")
                        .HasForeignKey("RecomendacionIdCod");

                    b.Navigation("Factura");

                    b.Navigation("Recomendacion");
                });

            modelBuilder.Entity("Dominio.InspeccionParte", b =>
                {
                    b.HasOne("Dominio.ParteVehiculo", "ParteVehiculo")
                        .WithMany("InspeccionPartes")
                        .HasForeignKey("ParteVehiculoIdCod");

                    b.Navigation("ParteVehiculo");
                });

            modelBuilder.Entity("Dominio.Modelo", b =>
                {
                    b.HasOne("Dominio.Marca", "Marca")
                        .WithMany("Modelos")
                        .HasForeignKey("MarcaIdCod");

                    b.Navigation("Marca");
                });

            modelBuilder.Entity("Dominio.Movimiento", b =>
                {
                    b.HasOne("Dominio.TipoMovimiento", "TipoMovimiento")
                        .WithMany("Movimientos")
                        .HasForeignKey("TipoMovimientoIdCod");

                    b.Navigation("TipoMovimiento");
                });

            modelBuilder.Entity("Dominio.Orden", b =>
                {
                    b.HasOne("Dominio.EstadoOrden", "EstadoOrden")
                        .WithMany("Ordenes")
                        .HasForeignKey("EstadoOrdenIdCod");

                    b.HasOne("Dominio.Factura", "Factura")
                        .WithMany("Ordenes")
                        .HasForeignKey("FacturaIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("Ordenes")
                        .HasForeignKey("PersonaIdCod");

                    b.Navigation("EstadoOrden");

                    b.Navigation("Factura");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.OrdenDiagnostico", b =>
                {
                    b.HasOne("Dominio.Orden", "Orden")
                        .WithMany("OrdenDiagnosticos")
                        .HasForeignKey("OrdenIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("OrdenDiagnosticos")
                        .HasForeignKey("PersonaIdCod");

                    b.Navigation("Orden");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.OrdenServicio", b =>
                {
                    b.HasOne("Dominio.DetalleFactura", "DetalleFactura")
                        .WithMany("OrdenServicios")
                        .HasForeignKey("DetalleFacturaIdCod");

                    b.HasOne("Dominio.Orden", "Orden")
                        .WithMany("OrdenServicios")
                        .HasForeignKey("OrdenIdCod");

                    b.HasOne("Dominio.Servicio", "Servicio")
                        .WithMany("OrdenServicios")
                        .HasForeignKey("ServicioIdCod");

                    b.Navigation("DetalleFactura");

                    b.Navigation("Orden");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dominio.ParteVehiculo", b =>
                {
                    b.HasOne("Dominio.EstadoParte", "EstadoParte")
                        .WithMany("ParteVehiculos")
                        .HasForeignKey("EstadoParteIdCod");

                    b.Navigation("EstadoParte");
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.HasOne("Dominio.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalIdCod");

                    b.HasOne("Dominio.TipoPersona", "TipoPersona")
                        .WithMany("Personas")
                        .HasForeignKey("TipoPersonaIdCod");

                    b.Navigation("Sucursal");

                    b.Navigation("TipoPersona");
                });

            modelBuilder.Entity("Dominio.PersonaAfiliacion", b =>
                {
                    b.HasOne("Dominio.Afiliacion", "Afiliacion")
                        .WithMany("PersonaAfiliaciones")
                        .HasForeignKey("AfiliacionIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("PersonaAfiliaciones")
                        .HasForeignKey("PersonaIdCod");

                    b.Navigation("Afiliacion");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.PersonaEspecialidad", b =>
                {
                    b.HasOne("Dominio.Especialidad", "Especialidad")
                        .WithMany("PersonaEspecialidades")
                        .HasForeignKey("EspecialidadIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("PersonaEspecialidades")
                        .HasForeignKey("PersonaIdCod");

                    b.Navigation("Especialidad");

                    b.Navigation("Persona");
                });

            modelBuilder.Entity("Dominio.PersonaServicio", b =>
                {
                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("PersonaServicios")
                        .HasForeignKey("PersonaIdCod");

                    b.HasOne("Dominio.Servicio", "Servicio")
                        .WithMany("PersonaServicios")
                        .HasForeignKey("ServicioIdCod");

                    b.Navigation("Persona");

                    b.Navigation("Servicio");
                });

            modelBuilder.Entity("Dominio.PrestadorServicio", b =>
                {
                    b.HasOne("Dominio.TipoPrestadorSer", "TipoPrestadorSer")
                        .WithMany("PrestadorServicios")
                        .HasForeignKey("TipoPrestadorSerIdCod");

                    b.Navigation("TipoPrestadorSer");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.HasOne("Dominio.Movimiento", "Movimiento")
                        .WithMany()
                        .HasForeignKey("MovimientoIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("Productos")
                        .HasForeignKey("PersonaIdCod");

                    b.HasOne("Dominio.TipoProducto", "TipoProducto")
                        .WithMany("Productos")
                        .HasForeignKey("TipoProductoIdCod");

                    b.Navigation("Movimiento");

                    b.Navigation("Persona");

                    b.Navigation("TipoProducto");
                });

            modelBuilder.Entity("Dominio.ProductoOrdenSer", b =>
                {
                    b.HasOne("Dominio.OrdenServicio", "OrdenServicio")
                        .WithMany("ProductoOrdenSers")
                        .HasForeignKey("OrdenServicioIdCod");

                    b.HasOne("Dominio.Producto", "Producto")
                        .WithMany("ProductoOrdenSers")
                        .HasForeignKey("ProductoIdCod");

                    b.Navigation("OrdenServicio");

                    b.Navigation("Producto");
                });

            modelBuilder.Entity("Dominio.Servicio", b =>
                {
                    b.HasOne("Dominio.TipoServicio", "TipoServicio")
                        .WithMany("Servicios")
                        .HasForeignKey("TipoServicioIdCod");

                    b.Navigation("TipoServicio");
                });

            modelBuilder.Entity("Dominio.Sucursal", b =>
                {
                    b.HasOne("Dominio.Ciudad", "Ciudad")
                        .WithMany("Sucursales")
                        .HasForeignKey("CiudadIdCod");

                    b.HasOne("Dominio.ContactoPersona", "ContactoPersona")
                        .WithMany("Sucursales")
                        .HasForeignKey("ContactoPersonaIdCod");

                    b.HasOne("Dominio.Empresa", "Empresa")
                        .WithMany("Sucursales")
                        .HasForeignKey("EmpresaIdCod");

                    b.Navigation("Ciudad");

                    b.Navigation("ContactoPersona");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("Dominio.Vehiculo", b =>
                {
                    b.HasOne("Dominio.InspeccionParte", "InspeccionParte")
                        .WithMany("Vehiculos")
                        .HasForeignKey("InspeccionParteIdCod");

                    b.HasOne("Dominio.Modelo", "Modelo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("ModeloIdCod");

                    b.HasOne("Dominio.Orden", "Orden")
                        .WithMany()
                        .HasForeignKey("OrdenIdCod");

                    b.HasOne("Dominio.Persona", "Persona")
                        .WithMany("Vehiculos")
                        .HasForeignKey("PersonaIdCod");

                    b.HasOne("Dominio.TipoVehiculo", "TipoVehiculo")
                        .WithMany("Vehiculos")
                        .HasForeignKey("TipoVehiculoIdCod");

                    b.Navigation("InspeccionParte");

                    b.Navigation("Modelo");

                    b.Navigation("Orden");

                    b.Navigation("Persona");

                    b.Navigation("TipoVehiculo");
                });

            modelBuilder.Entity("Dominio.Afiliacion", b =>
                {
                    b.Navigation("PersonaAfiliaciones");
                });

            modelBuilder.Entity("Dominio.Ciudad", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("Dominio.ContactoPersona", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("Dominio.Departamento", b =>
                {
                    b.Navigation("Ciudades");
                });

            modelBuilder.Entity("Dominio.DetalleFactura", b =>
                {
                    b.Navigation("OrdenServicios");
                });

            modelBuilder.Entity("Dominio.Empresa", b =>
                {
                    b.Navigation("Sucursales");
                });

            modelBuilder.Entity("Dominio.Especialidad", b =>
                {
                    b.Navigation("PersonaEspecialidades");
                });

            modelBuilder.Entity("Dominio.EstadoOrden", b =>
                {
                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Dominio.EstadoParte", b =>
                {
                    b.Navigation("ParteVehiculos");
                });

            modelBuilder.Entity("Dominio.Factura", b =>
                {
                    b.Navigation("DetalleFacturas");

                    b.Navigation("Ordenes");
                });

            modelBuilder.Entity("Dominio.InspeccionParte", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Dominio.Marca", b =>
                {
                    b.Navigation("Modelos");
                });

            modelBuilder.Entity("Dominio.Modelo", b =>
                {
                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Dominio.Orden", b =>
                {
                    b.Navigation("OrdenDiagnosticos");

                    b.Navigation("OrdenServicios");
                });

            modelBuilder.Entity("Dominio.OrdenServicio", b =>
                {
                    b.Navigation("ProductoOrdenSers");
                });

            modelBuilder.Entity("Dominio.Pais", b =>
                {
                    b.Navigation("Departamentos");
                });

            modelBuilder.Entity("Dominio.ParteVehiculo", b =>
                {
                    b.Navigation("InspeccionPartes");
                });

            modelBuilder.Entity("Dominio.Persona", b =>
                {
                    b.Navigation("ContactoPersonas");

                    b.Navigation("OrdenDiagnosticos");

                    b.Navigation("Ordenes");

                    b.Navigation("PersonaAfiliaciones");

                    b.Navigation("PersonaEspecialidades");

                    b.Navigation("PersonaServicios");

                    b.Navigation("Productos");

                    b.Navigation("Vehiculos");
                });

            modelBuilder.Entity("Dominio.PrestadorServicio", b =>
                {
                    b.Navigation("Afiliaciones");
                });

            modelBuilder.Entity("Dominio.Producto", b =>
                {
                    b.Navigation("ProductoOrdenSers");
                });

            modelBuilder.Entity("Dominio.Recomendacion", b =>
                {
                    b.Navigation("DetalleFacturas");
                });

            modelBuilder.Entity("Dominio.Servicio", b =>
                {
                    b.Navigation("OrdenServicios");

                    b.Navigation("PersonaServicios");
                });

            modelBuilder.Entity("Dominio.TipoContacto", b =>
                {
                    b.Navigation("ContactoPersonas");
                });

            modelBuilder.Entity("Dominio.TipoMovimiento", b =>
                {
                    b.Navigation("Movimientos");
                });

            modelBuilder.Entity("Dominio.TipoPersona", b =>
                {
                    b.Navigation("Personas");
                });

            modelBuilder.Entity("Dominio.TipoPrestadorSer", b =>
                {
                    b.Navigation("PrestadorServicios");
                });

            modelBuilder.Entity("Dominio.TipoProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("Dominio.TipoServicio", b =>
                {
                    b.Navigation("Servicios");
                });

            modelBuilder.Entity("Dominio.TipoVehiculo", b =>
                {
                    b.Navigation("Vehiculos");
                });
#pragma warning restore 612, 618
        }
    }
}
